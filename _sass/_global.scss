@import 'reset';

body {
    min-height: 100vh;
    font-family: $sans;
    background: lighten(blue, 1);
}

.bg {
    position: absolute;
    height: 100vh;
    width: 100vw;
    top: 0;
    filter: blur(10vw);
    pointer-events: none;
    animation: pulsate 10s infinite ease-in-out;
    circle {
        fill: url(#Sky);
    }
}

.site-header {
    position: absolute;
    left: 1rem;
    top: .5rem;
    transform: rotate(90deg);
    transform-origin: bottom left;
    z-index: 100;
    color: pink;
    font-size: .8rem;
    span {
        display: block;
        margin-top: .5em;
        @include bp(m){
            display: inline;
            &:before {
                content: ' /\ ';
            }
        }
    }
}

.play {
    appearance: none;
    background: none;
    border: 0;
    margin-right: .5rem;
    svg {
        display: block;
        width: 3rem;
    }
    path, polygon {
        //mix-blend-mode: soft-light;
    }
}

.btn {
    appearance: none;
    background: none;
    border: 0;
    cursor: pointer;
    margin-right: .5rem;
    &:hover {
    }
    &:focus {
        outline: none;
    }
    svg {
        display: block;
        position: absolute;
    }
    path, polygon, rect {
        fill: none;
        stroke: $black;
        stroke-width: 7px;
        mix-blend-mode: soft-light;
    }
    .icon {
        width: 3rem;
        height: 3rem;
        position: relative;
    }
    .pause {
        display: none;
        rect {
//          stroke-width: .5vw;
        }
    }
    .is-playing &{
        .play {
            display: none
        }
        .pause {
            display: block
        }
    }
}

.marquee {
    position: absolute;
    white-space: nowrap;
    overflow: hidden;
    pointer-events: none;
    bottom: 0;
    width: 100%;
    color: white;
    mix-blend-mode: multiply;
    animation: fade-in 0ms 0s both, marquee-small 20s infinite linear;
    font-size: 12vw;
    @include bp(m){
        font-size: 2.5vw;
    }
    @include bp(l){
        animation: fade-in 0ms 0s both, marquee 10s infinite linear;
    }
    span, em {
        display: inline-block;
        text-indent: 0 !important;
        padding: 1rem;
        text-align: center;
        width: 110vw;
        @include bp(l){
            width: 90vw;
        }
    }
    filter: blur(.06em);
}

// TODO: Make the marquee work for titles of different length
// The way to do this is as follows:
// 1. When a track is played, measure how wide the marquee text is
// 2. Turn that measurement into a fraction of the screen width, i.e vw units
// 3. Add that to however wide the "God is on the periphery.." bit is
// 4. Update the keyframe animation to match that amount of vw units